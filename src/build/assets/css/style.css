@font-face {
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../fonts/Montserrat-Regular.eot?") format("eot"), url("../fonts/Montserrat-Regular.woff") format("woff"), url("../fonts/Montserrat-Regular.ttf") format("truetype");
}

@font-face {
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url("../fonts/Montserrat-Medium.eot?") format("eot"), url("../fonts/Montserrat-Medium.woff") format("woff"), url("../fonts/Montserrat-Medium.ttf") format("truetype");
}

@font-face {
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url("../fonts/Montserrat-Bold.eot?") format("eot"), url("../fonts/Montserrat-Bold.woff") format("woff"), url("../fonts/Montserrat-Bold.ttf") format("truetype");
}

/* normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
	 ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
	 ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
	 ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
	 ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
	 ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
	 ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
	 ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

.datepicker {
  display: none;
}

.datepicker.active {
  display: block;
}

.datepicker-dropdown {
  left: 0;
  padding-top: 4px;
  position: absolute;
  top: 0;
  z-index: 20;
}

.datepicker-dropdown.datepicker-orient-top {
  padding-bottom: 4px;
  padding-top: 0;
}

.datepicker-picker {
  background-color: #fff;
  border-radius: 4px;
  display: inline-block;
}

.datepicker-dropdown .datepicker-picker {
  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);
}

.datepicker-picker span {
  -webkit-touch-callout: none;
  border: 0;
  border-radius: 4px;
  cursor: default;
  display: block;
  flex: 1;
  text-align: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.datepicker-main {
  padding: 2px;
}

.datepicker-footer {
  background-color: #f5f5f5;
  box-shadow: inset 0 1px 1px rgba(10, 10, 10, 0.1);
}

.datepicker-controls, .datepicker-grid, .datepicker-view, .datepicker-view .days-of-week {
  display: flex;
}

.datepicker-grid {
  flex-wrap: wrap;
}

.datepicker-view .days .datepicker-cell, .datepicker-view .dow {
  flex-basis: 14.2857142857%;
}

.datepicker-view.datepicker-grid .datepicker-cell {
  flex-basis: 25%;
}

.datepicker-cell, .datepicker-view .week {
  height: 2.25rem;
  line-height: 2.25rem;
}

.datepicker-title {
  background-color: #f5f5f5;
  box-shadow: inset 0 -1px 1px rgba(10, 10, 10, 0.1);
  font-weight: 700;
  padding: .375rem .75rem;
  text-align: center;
}

.datepicker-header .datepicker-controls {
  padding: 2px 2px 0;
}

.datepicker-controls .button {
  align-items: center;
  background-color: #fff;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  box-shadow: none;
  color: #363636;
  cursor: pointer;
  display: inline-flex;
  font-size: 1rem;
  height: 2.25em;
  justify-content: center;
  line-height: 1.5;
  margin: 0;
  padding: calc(.375em - 1px) 0.75em;
  position: relative;
  text-align: center;
  vertical-align: top;
  white-space: nowrap;
}

.datepicker-controls .button:active, .datepicker-controls .button:focus {
  outline: none;
}

.datepicker-controls .button:hover {
  border-color: #b5b5b5;
  color: #363636;
}

.datepicker-controls .button:focus {
  border-color: #3273dc;
  color: #363636;
}

.datepicker-controls .button:focus:not(:active) {
  box-shadow: 0 0 0 0.125em rgba(50, 115, 220, 0.25);
}

.datepicker-controls .button:active {
  border-color: #4a4a4a;
  color: #363636;
}

.datepicker-controls .button[disabled] {
  cursor: not-allowed;
}

.datepicker-header .datepicker-controls .button {
  border-color: transparent;
  font-weight: 700;
}

.datepicker-header .datepicker-controls .button:hover {
  background-color: #f9f9f9;
}

.datepicker-header .datepicker-controls .button:focus:not(:active) {
  box-shadow: 0 0 0 0.125em rgba(255, 255, 255, 0.25);
}

.datepicker-header .datepicker-controls .button:active {
  background-color: #f2f2f2;
}

.datepicker-header .datepicker-controls .button[disabled] {
  box-shadow: none;
}

.datepicker-footer .datepicker-controls .button {
  border-radius: 2px;
  font-size: .75rem;
  margin: calc(.375rem - 1px) 0.375rem;
  width: 100%;
}

.datepicker-controls .view-switch {
  flex: auto;
}

.datepicker-controls .next-btn, .datepicker-controls .prev-btn {
  padding-left: .375rem;
  padding-right: .375rem;
  width: 2.25rem;
}

.datepicker-controls .next-btn.disabled, .datepicker-controls .prev-btn.disabled {
  visibility: hidden;
}

.datepicker-view .dow {
  font-size: .875rem;
  font-weight: 700;
  height: 1.5rem;
  line-height: 1.5rem;
}

.datepicker-view .week {
  color: #b5b5b5;
  font-size: .75rem;
  width: 2.25rem;
}

@media (max-width: 22.5rem) {
  .datepicker-view .week {
    width: 1.96875rem;
  }
}

.datepicker-grid {
  width: 15.75rem;
}

@media (max-width: 22.5rem) {
  .calendar-weeks + .days .datepicker-grid {
    width: 13.78125rem;
  }
}

.datepicker-cell:not(.disabled):hover {
  background-color: #f9f9f9;
  cursor: pointer;
}

.datepicker-cell.focused:not(.selected) {
  background-color: #e8e8e8;
}

.datepicker-cell.selected, .datepicker-cell.selected:hover {
  background-color: #3273dc;
  color: #fff;
  font-weight: 600;
}

.datepicker-cell.disabled {
  color: #dbdbdb;
}

.datepicker-cell.next:not(.disabled), .datepicker-cell.prev:not(.disabled) {
  color: #7a7a7a;
}

.datepicker-cell.next.selected, .datepicker-cell.prev.selected {
  color: #e6e6e6;
}

.datepicker-cell.highlighted:not(.selected):not(.range):not(.today) {
  background-color: #f5f5f5;
  border-radius: 0;
}

.datepicker-cell.highlighted:not(.selected):not(.range):not(.today):not(.disabled):hover {
  background-color: #eee;
}

.datepicker-cell.highlighted:not(.selected):not(.range):not(.today).focused {
  background-color: #e8e8e8;
}

.datepicker-cell.today:not(.selected) {
  background-color: #00d1b2;
}

.datepicker-cell.today:not(.selected):not(.disabled) {
  color: #fff;
}

.datepicker-cell.today.focused:not(.selected) {
  background-color: #00c4a7;
}

.datepicker-cell.range-end:not(.selected), .datepicker-cell.range-start:not(.selected) {
  background-color: #b5b5b5;
  color: #fff;
}

.datepicker-cell.range-end.focused:not(.selected), .datepicker-cell.range-start.focused:not(.selected) {
  background-color: #afafaf;
}

.datepicker-cell.range-start {
  border-radius: 4px 0 0 4px;
}

.datepicker-cell.range-end {
  border-radius: 0 4px 4px 0;
}

.datepicker-cell.range {
  background-color: #dbdbdb;
  border-radius: 0;
}

.datepicker-cell.range:not(.disabled):not(.focused):not(.today):hover {
  background-color: #d5d5d5;
}

.datepicker-cell.range.disabled {
  color: #c2c2c2;
}

.datepicker-cell.range.focused {
  background-color: #cfcfcf;
}

.datepicker-view.datepicker-grid .datepicker-cell {
  height: 4.5rem;
  line-height: 4.5rem;
}

.datepicker-input.in-edit {
  border-color: #2366d1;
}

.datepicker-input.in-edit:active, .datepicker-input.in-edit:focus {
  box-shadow: 0 0 0.25em 0.25em rgba(35, 102, 209, 0.2);
}

html {
  font-size: var(--rem-base);
  box-sizing: border-box;
  padding: constant(safe-area-inset);
  padding: env(safe-area-inset);
}

@media (max-width: 1024px) {
  html {
    font-size: calc(var(--rem-base) - 1.5px);
  }
}

@media (max-width: 768px) {
  html {
    font-size: calc(var(--rem-base) - 2px);
  }
}

@media (max-width: 667px) {
  html {
    font-size: calc(var(--rem-base) - 2.5px);
  }
}

@media (max-width: 375px) {
  html {
    overflow-x: hidden;
    font-size: calc(var(--rem-base) - 3px);
  }
}

body {
  color: #000000;
  font: var(--font-size-base)/var(--line-height-base) "Montserrat", "Helvetica Neue", "Helvetica", sans-serif;
  min-width: 320px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6,
.h {
  font-family: "Montserrat", "Helvetica Neue", "Helvetica", sans-serif;
  font-weight: bold;
  color: #000000;
}

h1 a,
.h1 a,
h2 a,
.h2 a,
h3 a,
.h3 a,
h4 a,
.h4 a,
h5 a,
.h5 a,
h6 a,
.h6 a,
.h a {
  color: inherit;
  font-size: inherit;
}

h1,
.h1 {
  font-size: var(--h1);
  margin: 0 0 0.3em;
}

h2,
.h2 {
  font-size: var(--h2);
  margin: 0 0 0.4em;
}

h3,
.h3 {
  font-size: var(--h3);
  margin: 0 0 0.5em;
}

h4,
.h4 {
  font-size: var(--h4);
  margin: 0 0 0.6em;
}

h5,
.h5 {
  font-size: var(--h5);
  margin: 0 0 0.7em;
}

h6,
.h6 {
  font-size: var(--h6);
  margin: 0 0 0.8em;
}

p {
  margin-bottom: 1.2em;
  margin-top: 0;
}

a {
  color: #000000;
  transition: all var(--animation-duration) var(--animation-timing-function);
  text-decoration: none;
}

img {
  max-width: 100%;
  height: auto;
  vertical-align: top;
}

ul,
ol {
  list-style: none;
  margin-top: 0;
  padding-left: 0;
}

ul li,
ol li {
  list-style: none;
}

* {
  box-sizing: inherit;
  max-height: 1000000px;
}

*:after, *:before {
  box-sizing: inherit;
}

.resize-active {
  transition: none !important;
}

.resize-active *,
.resize-active *:before,
.resize-active *:after {
  transition: inherit !important;
}

html,
body,
.main {
  height: 100%;
}

.wrapper {
  height: 100%;
  width: 100%;
  position: relative;
  overflow: hidden;
  background: #152733;
}

.main {
  min-width: 0;
}

.section {
  height: 100%;
}

.section .wrap {
  height: 100%;
  display: grid;
  overflow: auto;
  padding: 50px 20px;
}

@media (max-width: 767px) {
  .section .wrap {
    padding: 30px 20px;
  }
}

.section .wrap-container {
  width: 100%;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}

.section .form-inner {
  max-width: 500px;
  width: 100%;
  height: 333px;
  position: relative;
  transform-style: preserve-3d;
  transition: all var(--animation-duration) var(--animation-timing-function);
  z-index: 2;
}

.hidden {
  display: none;
}

.flip {
  transform: rotateY(180deg);
}

.just-validate-error-label {
  margin: 5px 0 0 0px;
}

.datepicker-picker {
  background: #23303a;
}

.datepicker-header .datepicker-controls {
  border-radius: 4px;
}

.datepicker-header .datepicker-controls .button {
  background: #23303a;
  color: #FFFFFF;
  font-size: 10px;
  padding: 0;
}

.datepicker-header .datepicker-controls .button:hover {
  background: #414d56;
  color: #FFFFFF;
}

.datepicker-view .days .datepicker-cell,
.datepicker-view .dow {
  font-size: 12px;
  padding: 5px;
  height: auto;
  line-height: 1;
}

.datepicker-cell.focused:not(.selected) {
  background: #414d56;
}

.datepicker-cell:not(.disabled):hover {
  background: #414d56;
}

.datepicker-view.datepicker-grid .datepicker-cell {
  font-size: 12px;
  height: 3rem;
  line-height: 3rem;
}

.datepicker-grid {
  width: 200px;
}

.graphic-img {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 0;
}

.graphic-img img {
  max-width: 800px;
  width: 100%;
}

.form-box {
  padding: 50px 35px;
  background-color: #0f202c;
  color: #FFFFFF;
  max-width: 500px;
  width: 100%;
  border-radius: 10px;
  position: relative;
  margin: auto;
  backface-visibility: hidden;
}

@media (max-width: 666px) {
  .form-box {
    padding: 35px 20px;
  }
}

.form-box .h2 {
  color: #FFFFFF;
  line-height: 1.2;
  margin: 0 0 20px;
}

@media (max-width: 767px) {
  .form-box .h2 {
    margin: 0 0 10px;
  }
}

.form-box p {
  margin: 0 0 40px;
}

.form-box_reset {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
}

.form-box .form {
  margin: 0 0 40px;
  padding: 0;
}

.form-box .form__group {
  margin: 0 0 15px;
}

.form-box .form__group:last-child {
  margin: 0;
}

.form-box .form__group input {
  border: 1px solid #0f202c;
  background-color: rgba(255, 255, 255, 0.07);
  color: #000000;
  width: 100%;
  padding: 10px 20px;
  border-radius: 5px;
  color: #FFFFFF;
  outline: none;
  font-size: 14px;
}

.form-box .form__group input:focus {
  border-color: #0093FF;
}

.form-box .form__group input::placeholder {
  color: #a5a9ac;
}

.form-box .form__group button {
  padding: 5px 20px;
  border: 1px solid #0093FF;
  background: #0093FF;
  border-radius: 5px;
  font-weight: 700;
  transition: all var(--animation-duration) var(--animation-timing-function);
}

.form-box .form__group button:hover {
  background: transparent;
  color: #0093FF;
}

.form-box .form__group_button {
  display: flex;
  align-items: center;
}

.form-box .form__group_button .forget {
  margin-left: 10px;
  color: #FFFFFF;
  font-size: 14px;
}

.form-box .form__group_button .forget:hover {
  color: #0093FF;
}

.form-box .form__group_password {
  position: relative;
}

.form-box .form__group_password .ico-show {
  position: absolute;
  top: 12px;
  right: 20px;
  display: flex;
  cursor: pointer;
}

.form-box .form__group_password .ico-show:hover svg use {
  fill: #0093FF;
}

.form-box .form__group_password .ico-show svg use {
  transition: all var(--animation-duration) var(--animation-timing-function);
}

.form-box .form__group_password .ico-show svg.show {
  display: none;
}

.form-box .form__group_password .ico-show.switch svg.hide {
  display: none;
}

.form-box .form__group_password .ico-show.switch svg.show {
  display: block;
}

.form-box .form_reset {
  margin: 0;
}

.form-box .form_reset button {
  width: 100%;
}

.form-send {
  padding: 50px 35px;
  background-color: #FFFFFF;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%) rotateY(180deg);
  max-width: 499px;
  width: 100%;
  height: 332px;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border-radius: 10px;
  backface-visibility: hidden;
}

.form-send .tick-icon {
  margin-bottom: 15px;
}

.form-send p {
  opacity: .6;
}

.form-send p:last-child {
  margin-bottom: 0;
}

.tick-icon {
  background-color: #e9fdd6;
  position: relative;
  display: inline-block;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  transform: rotate(45deg);
}

.tick-icon:before, .tick-icon:after {
  content: "";
  position: absolute;
  background: #FFFFFF;
  border-radius: 2px;
  background-color: #8CCB57;
}

.tick-icon:before {
  width: 10px;
  height: 2px;
  top: 28px;
  left: 14px;
}

.tick-icon:after {
  width: 2px;
  height: 20px;
  top: 9px;
  left: 22px;
}

.other-links {
  margin: 0 0 40px;
}

.other-links__text {
  color: #a5a9ac;
  margin: 0 0 15px;
  display: inline-block;
  font-size: 14px;
}

.other-links__holder {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.other-links__holder a {
  padding: 5px 10px;
  color: #a5a9ac;
  background-color: #0a151e;
  font-weight: 700;
  border-radius: 3px;
  display: flex;
  align-items: center;
  font-size: 12px;
}

.other-links__holder a:hover {
  background-color: rgba(10, 21, 30, 0.5);
  color: #FFFFFF;
}

.other-links__holder a .ico {
  width: 18px;
  height: 18px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  margin-right: 7px;
}

.other-links__holder a .ico_facebook {
  background: #3b5998;
}

.other-links__holder a .ico_google {
  background: #dd4b39;
}

.other-links__holder a .ico_linkedin {
  background: #007bb6;
}

.page-link {
  color: #FFFFFF;
  position: relative;
  display: inline-block;
  padding-bottom: 6px;
}

.page-link:before {
  position: absolute;
  content: '';
  width: 100%;
  height: 2px;
  bottom: 0;
  left: 0;
  background: #FFFFFF;
}

.page-link:after {
  position: absolute;
  content: '';
  width: 0;
  height: 2px;
  bottom: 0;
  left: 0;
  background: #0093FF;
  transition: all var(--animation-duration) var(--animation-timing-function);
}

.page-link:hover:after {
  width: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
